stages:
  - build
  - release
  - deploy
  - cleanup

variables:
  FRONTEND_CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/frontend:$CI_BUILD_REF_NAME
  FRONTEND_BUILD_IMAGE: rgv-frontend:$CI_BUILD_REF
  BACKEND_CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/backend:$CI_BUILD_REF_NAME
  BACKEND_BUILD_IMAGE: rgv-backend:$CI_BUILD_REF
  FHIRPATH_CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/backend:$CI_BUILD_REF_NAME
  FHIRPATH_BUILD_IMAGE: rgv-fhirpath:$CI_BUILD_REF


build-frontend:
  stage: build
  script:
    - docker build -t $FRONTEND_BUILD_IMAGE frontend

release-frontend:
  stage: release
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - docker tag $FRONTEND_BUILD_IMAGE $FRONTEND_CONTAINER_RELEASE_IMAGE
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $FRONTEND_CONTAINER_RELEASE_IMAGE
  only:
    - master

build-fhirpath:
  stage: build
  script:
    - docker build -t $FHIRPATH_BUILD_IMAGE fhirpath

release-fhirpath:
  stage: release
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - docker tag $FHIRPATH_BUILD_IMAGE $FHIRPATH_CONTAINER_RELEASE_IMAGE
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $FHIRPATH_CONTAINER_RELEASE_IMAGE
  only:
    - master

build-backend:
  stage: build
  script:
    - docker build -t $BACKEND_BUILD_IMAGE backend

release-backend:
  stage: release
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - docker tag $BACKEND_BUILD_IMAGE $BACKEND_CONTAINER_RELEASE_IMAGE
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $BACKEND_CONTAINER_RELEASE_IMAGE
  only:
    - master

deploy:
  stage: deploy
  before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  - docker pull registry.bro.engineering/ansible_deploy/helm_deploy:master
  script: >
    docker run --rm
    -v $CI_PROJECT_DIR/chart:/src
    --env KUBECONFIG=/root/.kube/config
    --env K8S_CONFIG="$K8S_CONFIG"
    --env CI_BUILD_TOKEN=$CI_BUILD_TOKEN
    --env CI_REGISTRY=$CI_REGISTRY
    --entrypoint sh
    registry.bro.engineering/ansible_deploy/helm_deploy:master
    /src/deploy.sh $CI_COMMIT_SHA
  only:
    - master
    
cleanup:
  stage: cleanup
  script:
    - bash -c "[ -z $(docker images -q $FRONTEND_BUILD_IMAGE) ] || docker rmi $FRONTEND_BUILD_IMAGE"
    - bash -c "[ -z $(docker images -q $BACKEND_BUILD_IMAGE) ] || docker rmi $BACKEND_BUILD_IMAGE"
  when: always
